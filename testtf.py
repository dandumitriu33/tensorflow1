# -*- coding: utf-8 -*-
"""testTF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mtMUUVHcaDyJW4VLsc2b3Ii5fUHpw2uh

Testing tf  
yes
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x

import tensorflow as tf
print(tf.version)

import numpy

print("f")
def func(h):
  print(h)

func("moomoo")

"""## Creating tensors"""

string = tf.Variable("This is a string", tf.string)
number = tf.Variable(324, tf.int16)
floating = tf.Variable(3.567, tf.float64)

"""## Tensor rank"""

rank1_tensor = tf.Variable(["Test", "OK", "Tim"], tf.string)
rank2_tensor = tf.Variable([["test", "ok"], ["test2", "ok2"]], tf.string)

"""Determine rank - only shows the last one :p"""

tf.rank(rank1_tensor)
tf.rank(rank2_tensor)

"""tensor shape  
\[1, 2, 3\]  
1 - one interior list  
2 - 2 lists inside of that list  
3 - 3 elements in each inner list
"""

rank2_tensor.shape

"""Changing shape"""

tensor1 = tf.ones([1, 2, 3])    # tf.ones() creates a shape [1, 2, 3] tensor full of ones
tensor2 = tf.reshape(tensor1, [2, 3, 1])    # reshape existing data to [2, 3, 1]
tensor3 = tf.reshape(tensor2, [3, -1])    # -1 tells the tensor to calculate the size of the dimension in that place
                                          # this will reshape the tensor to [3, 2]

# the number of elements in the reshaped tensor MUST match the number in the original

"""print results"""

print(tensor1)
print(tensor2)
print(tensor3)

"""##Types of tensors  
 * Variable  
 * Constant
 * Placeholder
 * SparseTensor

## Evaluate a tensor
"""

# with tf.session() as sess:    # creates a session using the default graph
#  tensor.eval()    # tensor will of course be the name of your tensor

"""## Practice"""

t = tf.zeros([5, 5, 5, 5])
# print(t)
t = tf.reshape(t, [625])
print(t)
# t = tf.reshape(t, [125, -1])    # bad at math
# print(t)